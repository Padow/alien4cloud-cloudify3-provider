

tosca_definitions_version: cloudify_dsl_1_2


imports:
  - http://www.getcloudify.org/spec/cloudify/3.3rc1/types.yaml
  - http://www.getcloudify.org/spec/openstack-plugin/1.3rc1/plugin.yaml
  - http://www.getcloudify.org/spec/diamond-plugin/1.3rc1/plugin.yaml

node_types:
  alien.nodes.openstack.Compute:
    derived_from: cloudify.openstack.nodes.Server
    properties:
      _a4c_substitute_for:
        default: []
      _a4c_att_ip_address:
        default:
          function: get_attribute
          parameters:
            - SELF
            - ip
      _a4c_att_public_ip_address:
        default:
          function: get_attribute
          parameters:
            - TARGET
            - cloudify.openstack.server_connected_to_floating_ip
            - floating_ip_address
  alien.cloudify.openstack.nodes.DeletableVolume:
    derived_from: cloudify.openstack.nodes.Volume
    properties:
      _a4c_substitute_for:
        default: []
      _a4c_att_device:
        default:
          function: get_attribute
          parameters:
            - SELF
            - device_name
  alien.cloudify.openstack.nodes.Volume:
    derived_from: cloudify.openstack.nodes.Volume
    properties:
      _a4c_substitute_for:
        default: []
      _a4c_att_device:
        default:
          function: get_attribute
          parameters:
            - SELF
            - device_name
      _a4c_persistent_resources:
        default: {"external_id":"volume_id"}

  alien.nodes.LinuxFileSystem:
    derived_from: cloudify.nodes.SoftwareComponent
  alien.cloudify.nodes.monitor:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      nodes_to_monitor:
        default: []


node_templates:

  Compute:
    type: alien.nodes.openstack.Compute
    properties: 
      image: 02ddfcbb-9534-44d7-974d-5cfd36dfbcab
      flavor: 2
      cloudify_agent: 
        user: ubuntu

    interfaces:
      cloudify.interfaces.monitoring_agent:
        install:
          implementation: diamond.diamond_agent.tasks.install
          inputs:
            diamond_config:
               interval: 1
        start: diamond.diamond_agent.tasks.start
        stop: diamond.diamond_agent.tasks.stop
        uninstall: diamond.diamond_agent.tasks.uninstall
      cloudify.interfaces.monitoring:
        start:
          implementation: diamond.diamond_agent.tasks.add_collectors
          inputs:
            collectors_config:
               CPUCollector: {}
               MemoryCollector: {}
               LoadAverageCollector: {}
               DiskUsageCollector:
                 config:
                   devices: x?vd[a-z]+[0-9]*$
               NetworkCollector: {}
  BlockStorage:
    type: alien.cloudify.openstack.nodes.Volume
    interfaces:
      cloudify.interfaces.lifecycle:
        delete: {}
    properties: 
      resource_id: yeah
      volume: 
        size: 1
      use_external_resource: true
    relationships:
      - target: Compute
        type: cloudify.openstack.volume_attached_to_server
  DeletableBlockStorage:
    type: alien.cloudify.openstack.nodes.DeletableVolume
    properties: 
      volume: 
        size: 1
    relationships:
      - target: Compute
        type: cloudify.openstack.volume_attached_to_server

  FileSystem:
    type: alien.nodes.LinuxFileSystem
    instances:
      deploy: 1
    interfaces:
      cloudify.interfaces.lifecycle:
        stop: wrapper/FileSystem/tosca.interfaces.node.lifecycle.Standard/stop/artifacts/alien-extended-storage-types/scripts/_a4c_unmount.py
        start: wrapper/FileSystem/tosca.interfaces.node.lifecycle.Standard/start/artifacts/alien-extended-storage-types/scripts/_a4c_mount.py
        configure: wrapper/FileSystem/tosca.interfaces.node.lifecycle.Standard/configure/artifacts/alien-extended-storage-types/scripts/_a4c_mkfs.py
    relationships:
      - target: Compute
        type: cloudify.relationships.contained_in

  _a4c_monitor:
    type: alien.cloudify.nodes.monitor
    properties:
      nodes_to_monitor:
        - Compute
    relationships:
      - target: Compute
        type: cloudify.relationships.depends_on
      - target: _a4c_monitor_container
        type: cloudify.relationships.contained_in
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          inputs:
            BASE_DIR: "/tmp/_a4c_monitoring"
            MONITORING_INTERVAL: 1
          implementation: monitor/scripts/policy-start.sh
          executor: central_deployment_agent
        stop:
          inputs:
            BASE_DIR: "/tmp/_a4c_monitoring"
          implementation: monitor/scripts/policy-stop.sh
          executor: central_deployment_agent

  _a4c_monitor_container:
    type: cloudify.nodes.Compute
    properties:
      install_agent: false

plugins:
  custom_wf_plugin:
    executor: central_deployment_agent
    source: custom_wf_plugin

workflows:
  a4c_install: custom_wf_plugin.plugin.workflows.a4c_install
  a4c_uninstall: custom_wf_plugin.plugin.workflows.a4c_uninstall
  a4c_scale:
    mapping: custom_wf_plugin.plugin.workflows.a4c_scale
    parameters:
      node_id:
        description: Which node (not node instance) to scale
      delta:
        description: >
            How many nodes should be added/removed.
            A positive number denotes increase of instances.
            A negative number denotes decrease of instances.
        default: 1
      scale_compute:
        description: >
            If node is contained (transitively) within a compute node
            and this property is 'true', operate on compute node instead
            of 'node_id'
        default: true
  a4c_heal:
    mapping: custom_wf_plugin.plugin.workflows.a4c_heal
    parameters:
      node_instance_id:
        description: Which node instance has failed
      diagnose_value:
        description: Diagnosed reason of failure
        default: Not provided
