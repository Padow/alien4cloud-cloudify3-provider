#if(!$computeHardSetPassword)
      - target: ${mapping.generatedNodePrefix}_key_pair_for_${compute.id}
        type: cloudify.openstack.server_connected_to_keypair
#end
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          max_retries: 40
      cloudify.interfaces.worker_installer:
        install:
          inputs:
            cloudify_agent: &CLOUDIFY_AGENT_${compute.id}
              service:
                successful_consecutive_status_queries_count: 10
                status_transition_sleep_interval: 5
                start_timeout: 240
                stop_timeout: 240
              user: "${compute.nodeTemplate.properties.get("user").value}"
#if($computeHardSetPassword)
              password: "$computeHardSetPassword"
#else
              password: { get_attribute: [SELF, password] }
#end
        start:
          inputs:
            cloudify_agent: *CLOUDIFY_AGENT_${compute.id}
        stop:
          inputs:
            cloudify_agent: *CLOUDIFY_AGENT_${compute.id}
        uninstall:
          inputs:
            cloudify_agent: *CLOUDIFY_AGENT_${compute.id}
        restart:
          inputs:
            cloudify_agent: *CLOUDIFY_AGENT_${compute.id}
      cloudify.interfaces.plugin_installer:
        install:
          inputs:
            cloudify_agent: *CLOUDIFY_AGENT_${compute.id}
#if(!$computeHardSetPassword)
  ${mapping.generatedNodePrefix}_key_pair_for_${compute.id}:
    type: cloudify.openstack.nodes.KeyPair
    properties:
      resource_id: ${compute.nodeTemplate.properties.get("key_pair").value}
      use_external_resource: true
      private_key_path: ${compute.nodeTemplate.properties.get("private_key_path").value}
#end
